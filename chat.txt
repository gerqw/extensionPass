Cuando desarrollas una extensión de Chrome, la URL actual de la pestaña puede no estar disponible directamente como lo harías en una página web normal. Debes usar la API de Chrome para acceder a la URL de la pestaña activa. Aquí te muestro cómo hacerlo:

Paso 1: Manifest de la Extensión
Asegúrate de que tu archivo manifest.json tiene los permisos necesarios:

{
  "manifest_version": 3,
  "name": "Mi Extensión",
  "version": "1.0",
  "permissions": ["tabs"],
  "background": {
    "service_worker": "background.js"
  },
  "action": {
    "default_popup": "popup.html"
  }
}



Paso 2: Obtener la URL de la Pestaña Activa
En tu archivo background.js o popup.js, puedes usar el siguiente código para obtener la URL:


chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
  const currentTab = tabs[0];
  const currentURL = currentTab.url; // URL de la pestaña activa

  // Llama a tu función isIP aquí
  const result = isIP(currentURL);
  console.log(`La URL actual ${currentURL} ${result ? 'es' : 'no es'} una dirección IP.`);
});

function isIP(url) {
  const ipv4Pattern = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){2}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
  const ipv6Pattern = /([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]))\.){3}(25[0-5]|(2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9]))/;

  const urlParts = new URL(url);
  const hostname = urlParts.hostname;

  return ipv4Pattern.test(hostname) || ipv6Pattern.test(hostname);
}



Explicación
chrome.tabs.query: Utiliza esta función para obtener la pestaña activa y su URL.
Validación: Luego puedes pasar la URL a tu función isIP como antes.
Notas Adicionales
Asegúrate de tener los permisos necesarios en tu manifest.json.
Si estás usando un archivo popup.html, este código debe ir en un archivo JavaScript asociado a ese HTML.
Si necesitas más ayuda, ¡dímelo!